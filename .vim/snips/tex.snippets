# snippet file for tex

global !p
def replace(text, d):
    # replaces all occurences of key in string with value (keys and values must
    # be strings
    for k in d:
        text = text.replace(k, d[k])
    return text
endglobal

snippet pre "The preamble snippet" b
\documentclass[${1:11pt}]{${2:article}}

% Name: ${3:Hrishikesh Bodas}
% Andrew ID: ${4:hbodas}
% Course: ${5:course code}
% Homework number: ${6:hwnum}

`!p 
rstr = ''
pth = vim.eval('expand("%:p")')
revpath = pth[::-1]
pfile = pth[:(len(pth) - revpath.find("/",revpath.find("/")+1))] + \
"preamble.txt"
try: 
    te = open(pfile, "r")
    contents = te.read()
    replacements = {
	"***name***" : str(t[3]),
	"***andrewid***" : str(t[4]),
	"***class***" : str(t[5]),
	"***hwnum***" : str(t[6])
	}
    snip.rv = replace(contents,replacements)
except:
    snip.rv = "\\usepackage{hb_math}\n\n\\begin{document}\\\n"
`
${0:write stuff here}

\end{document}
endsnippet

snippet prob "Problem trigger" b
\section{Problem $1}

$0 
endsnippet

snippet sprob "Part trigger" b
% {{{ part ${1:part}
\paragraph{$1} $2
% }}} ${0:end here}
endsnippet

snippet fo "insert a pair of fold markers for vim" b
% {{{ ${1:title of the fold}
$0
endsnippet

snippet fc "Close fold marker latex" b
% }}}
$0
endsnippet

snippet vsp "Insert vertical space" 
\vspace{$1} $0
endsnippet

snippet itt "Intertext" b
\intertext{$1} $0
endsnippet

snippet cal "Mathcal" 
\mathcal{$1} $0
endsnippet

snippet doc "document class thing" b
\documentclass[${1:11pt}]{${2:article}}$0
endsnippet

snippet pac "Package definition" b
\usepackage${1:[${2:option}]}{${3:package}}$0
endsnippet

snippet sec "Section snippet" b
\section{$1}$0
endsnippet

snippet imp "implies symbol" 
\implies
endsnippet

snippet tbd "TBD marker - huge text" b
{\Huge TBD!!!}
endsnippet

snippet lr( "Left and right parentheses" 
\left( $1 \right) $0
endsnippet
