#!/bin/python

# script to get all colors generated by wal, and then tint them and produce a
# file with those tinted colors to use in polybar

import pywal

def getRGB(color_string):
    R = color_string[1:3]
    G = color_string[3:5]
    B = color_string[5:7]
    return (int(R, 16), int(G, 16), int(B, 16))

def darkenRGB(r, g, b):
    return (int(0.90 * r), int(0.90 * g), int(0.90 * b))

def lightenRGB(r, g, b):
    return (int(r + 0.10*(255-r)), int(g + 0.10*(255-g)), int(b + 0.10*(255-b)))

def outputToHex(r, g, b, a=None):
    red = str(hex(r))[2:]
    green = str(hex(g))[2:]
    blue = str(hex(b))[2:]

    if a == None: alpha = ""
    else: 
        alpha = str(hex(a))[2:]
        if len(alpha) != 2: alpha = "0" + alpha

    while len(red) != 2:
        red = "0" + red

    while len(green) != 2:
        green = "0" + green

    while len(blue) != 2:
        blue = "0" + blue

    return "#"+alpha+red+green+blue

colors = pywal.colors.file("/home/hrishikesh/.cache/wal/colors.json")

color_str = ""

# transparent
color_str += "transparent #00000000\n"

cols = ["background", "foreground", "color0", "color1", "color2", "color3", \
        "color4", "color5", "color6", "color7", "color8"]

for color in cols:
    if color == "background" or color == "foreground": subdict = "special"
    else: subdict = "colors"
    c_r, c_g, c_b = getRGB(colors[subdict][color])
    d_r, d_g, d_b = darkenRGB(c_r, c_g, c_b)
    l_r, l_g, l_b = lightenRGB(c_r, c_g, c_b)
    lightstr = color + "-light " + outputToHex(l_r, l_g, l_b) + "\n"
    darkstr = color + "-dark " + outputToHex(d_r, d_g, d_b) + "\n"
    regstr = color + " " + outputToHex(c_r, c_g, c_b) + "\n"
    color_str += regstr + darkstr + lightstr

print(color_str[:-1])
